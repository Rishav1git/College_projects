Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA

Grammar

Rule 0     S' -> function_declaration
Rule 1     function_declaration -> ACCESS_MODIFIER RETURN_TYPE ID LPAREN RPAREN SEMICOLON

Terminals, with rules where they appear

ACCESS_MODIFIER      : 1
COMMA                : 
ID                   : 1
LPAREN               : 1
RETURN_TYPE          : 1
RPAREN               : 1
SEMICOLON            : 1
error                : 

Nonterminals, with rules where they appear

function_declaration : 0

Parsing method: LALR

state 0

    (0) S' -> . function_declaration
    (1) function_declaration -> . ACCESS_MODIFIER RETURN_TYPE ID LPAREN RPAREN SEMICOLON

    ACCESS_MODIFIER shift and go to state 2

    function_declaration           shift and go to state 1

state 1

    (0) S' -> function_declaration .



state 2

    (1) function_declaration -> ACCESS_MODIFIER . RETURN_TYPE ID LPAREN RPAREN SEMICOLON

    RETURN_TYPE     shift and go to state 3


state 3

    (1) function_declaration -> ACCESS_MODIFIER RETURN_TYPE . ID LPAREN RPAREN SEMICOLON

    ID              shift and go to state 4


state 4

    (1) function_declaration -> ACCESS_MODIFIER RETURN_TYPE ID . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 5


state 5

    (1) function_declaration -> ACCESS_MODIFIER RETURN_TYPE ID LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 6


state 6

    (1) function_declaration -> ACCESS_MODIFIER RETURN_TYPE ID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 7


state 7

    (1) function_declaration -> ACCESS_MODIFIER RETURN_TYPE ID LPAREN RPAREN SEMICOLON .

    $end            reduce using rule 1 (function_declaration -> ACCESS_MODIFIER RETURN_TYPE ID LPAREN RPAREN SEMICOLON .)

