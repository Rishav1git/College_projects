
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CLOSE_BRACE CLOSE_PAREN COMMA DATATYPE DO EQUAL FOR ID INT LESS_THAN OPEN_BRACE OPEN_PAREN PLUS PRINTF SEMICOLON STRING WHILEprogram : program statement\n               | emptystatement : for_loop\n                 | while_loop\n                 | do_while_loop\n                 | INT\n                 | LESS_THAN\n                 | OPEN_PAREN\n                 | CLOSE_PAREN\n                 | OPEN_BRACE\n                 | CLOSE_BRACE\n                 | SEMICOLON\n                 for_loop : FOR OPEN_PAREN DATATYPE ID EQUAL INT SEMICOLON ID LESS_THAN INT SEMICOLON ID PLUS PLUS CLOSE_PAREN OPEN_BRACE PRINTF OPEN_PAREN STRING  COMMA ID CLOSE_PAREN SEMICOLON CLOSE_BRACEwhile_loop : WHILE OPEN_PAREN DATATYPE ID LESS_THAN INT CLOSE_PAREN OPEN_BRACE PRINTF OPEN_PAREN STRING COMMA ID CLOSE_PAREN SEMICOLON ID PLUS PLUS SEMICOLON CLOSE_BRACEdo_while_loop : DO OPEN_BRACE DATATYPE ID SEMICOLON PRINTF OPEN_PAREN STRING COMMA ID CLOSE_PAREN SEMICOLON ID PLUS PLUS SEMICOLON CLOSE_BRACE WHILE OPEN_PAREN ID LESS_THAN INT CLOSE_PAREN SEMICOLONempty :'
    
_lr_action_items = {'INT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,26,27,38,72,75,80,81,],[-16,7,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,29,30,41,-14,77,-13,-15,]),'LESS_THAN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,24,35,72,73,80,81,],[-16,8,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,27,38,-14,75,-13,-15,]),'OPEN_PAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,31,39,62,67,72,80,81,],[-16,9,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,17,18,34,42,65,70,-14,-13,-15,]),'CLOSE_PAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,30,43,51,53,72,74,77,80,81,],[-16,10,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,33,46,54,56,-14,76,79,-13,-15,]),'OPEN_BRACE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,33,56,72,80,81,],[-16,11,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,19,36,59,-14,-13,-15,]),'CLOSE_BRACE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,61,69,72,78,80,81,],[-16,12,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,64,72,-14,80,-13,-15,]),'SEMICOLON':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,25,29,41,46,54,58,66,72,76,79,80,81,],[-16,13,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,28,32,44,49,57,61,69,-14,78,81,-13,-15,]),'FOR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,72,80,81,],[-16,14,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-14,-13,-15,]),'WHILE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,64,72,80,81,],[-16,15,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,67,-14,-13,-15,]),'DO':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,72,80,81,],[-16,16,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-14,-13,-15,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,72,80,81,],[-16,0,-2,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-14,-13,-15,]),'DATATYPE':([17,18,19,],[20,21,22,]),'ID':([20,21,22,32,40,44,48,49,57,70,71,],[23,24,25,35,43,47,51,52,60,73,74,]),'EQUAL':([23,],[26,]),'PRINTF':([28,36,59,],[31,39,62,]),'STRING':([34,42,65,],[37,45,68,]),'COMMA':([37,45,68,],[40,48,71,]),'PLUS':([47,50,52,55,60,63,],[50,53,55,58,63,66,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'empty':([0,],[2,]),'statement':([1,],[3,]),'for_loop':([1,],[4,]),'while_loop':([1,],[5,]),'do_while_loop':([1,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','yacc.py',8),
  ('program -> empty','program',1,'p_program','yacc.py',9),
  ('statement -> for_loop','statement',1,'p_statement','yacc.py',13),
  ('statement -> while_loop','statement',1,'p_statement','yacc.py',14),
  ('statement -> do_while_loop','statement',1,'p_statement','yacc.py',15),
  ('statement -> INT','statement',1,'p_statement','yacc.py',16),
  ('statement -> LESS_THAN','statement',1,'p_statement','yacc.py',17),
  ('statement -> OPEN_PAREN','statement',1,'p_statement','yacc.py',18),
  ('statement -> CLOSE_PAREN','statement',1,'p_statement','yacc.py',19),
  ('statement -> OPEN_BRACE','statement',1,'p_statement','yacc.py',20),
  ('statement -> CLOSE_BRACE','statement',1,'p_statement','yacc.py',21),
  ('statement -> SEMICOLON','statement',1,'p_statement','yacc.py',22),
  ('for_loop -> FOR OPEN_PAREN DATATYPE ID EQUAL INT SEMICOLON ID LESS_THAN INT SEMICOLON ID PLUS PLUS CLOSE_PAREN OPEN_BRACE PRINTF OPEN_PAREN STRING COMMA ID CLOSE_PAREN SEMICOLON CLOSE_BRACE','for_loop',24,'p_for_loop','yacc.py',27),
  ('while_loop -> WHILE OPEN_PAREN DATATYPE ID LESS_THAN INT CLOSE_PAREN OPEN_BRACE PRINTF OPEN_PAREN STRING COMMA ID CLOSE_PAREN SEMICOLON ID PLUS PLUS SEMICOLON CLOSE_BRACE','while_loop',20,'p_while_loop','yacc.py',32),
  ('do_while_loop -> DO OPEN_BRACE DATATYPE ID SEMICOLON PRINTF OPEN_PAREN STRING COMMA ID CLOSE_PAREN SEMICOLON ID PLUS PLUS SEMICOLON CLOSE_BRACE WHILE OPEN_PAREN ID LESS_THAN INT CLOSE_PAREN SEMICOLON','do_while_loop',24,'p_do_while_loop','yacc.py',36),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',40),
]
